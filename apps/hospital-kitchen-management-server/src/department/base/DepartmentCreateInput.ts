/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsInt,
  Min,
  Max,
} from "class-validator";
import { IngredientCreateNestedManyWithoutDepartmentsInput } from "./IngredientCreateNestedManyWithoutDepartmentsInput";
import { Type } from "class-transformer";
import { InventoryCreateNestedManyWithoutDepartmentsInput } from "./InventoryCreateNestedManyWithoutDepartmentsInput";
import { MealCreateNestedManyWithoutDepartmentsInput } from "./MealCreateNestedManyWithoutDepartmentsInput";

@InputType()
class DepartmentCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  departmentName?: string | null;

  @ApiProperty({
    required: false,
    type: () => IngredientCreateNestedManyWithoutDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => IngredientCreateNestedManyWithoutDepartmentsInput)
  @IsOptional()
  @Field(() => IngredientCreateNestedManyWithoutDepartmentsInput, {
    nullable: true,
  })
  ingredients?: IngredientCreateNestedManyWithoutDepartmentsInput;

  @ApiProperty({
    required: false,
    type: () => InventoryCreateNestedManyWithoutDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => InventoryCreateNestedManyWithoutDepartmentsInput)
  @IsOptional()
  @Field(() => InventoryCreateNestedManyWithoutDepartmentsInput, {
    nullable: true,
  })
  inventories?: InventoryCreateNestedManyWithoutDepartmentsInput;

  @ApiProperty({
    required: false,
    type: () => MealCreateNestedManyWithoutDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => MealCreateNestedManyWithoutDepartmentsInput)
  @IsOptional()
  @Field(() => MealCreateNestedManyWithoutDepartmentsInput, {
    nullable: true,
  })
  meals?: MealCreateNestedManyWithoutDepartmentsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalRequiredItems?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalRequiredMaterials?: number | null;
}

export { DepartmentCreateInput as DepartmentCreateInput };
